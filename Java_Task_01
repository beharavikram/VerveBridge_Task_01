import java.util.Scanner;

// Book class to represent a book
class Book {
    private String title;
    private String author;
    private boolean available;

    public Book(String title, String author) {
        this.title = title;
        this.author = author;
        this.available = true; // Initially, the book is available
    }

    public String getTitle() {
        return title;
    }

    public String getAuthor() {
        return author;
    }

    public boolean isAvailable() {
        return available;
    }

    public void setAvailable(boolean available) {
        this.available = available;
    }

    @Override
    public String toString() {
        return "'" + title + "' by " + author + " (Available: " + (available ? "Yes" : "No") + ")";
    }
}

// Library class to manage books
class Library {
    private Book[] books;
    private int size;

    public Library(int capacity) {
        this.books = new Book[capacity];
        this.size = 0;
    }

    // Add a new book to the library
    public void addBook(String title, String author) {
        if (size < books.length) {
            books[size++] = new Book(title, author);
            System.out.println("Book added successfully!");
        } else {
            System.out.println("Library is full. Cannot add more books.");
        }
    }

    // Issue a book by marking it as unavailable
    public void issueBook(String title) {
        boolean found = false;
        for (Book book : books) {
            if (book != null && book.getTitle().equalsIgnoreCase(title) && book.isAvailable()) {
                book.setAvailable(false);
                System.out.println("You have issued the book '" + book.getTitle() + "'.");
                found = true;
                break;
            }
        }
        if (!found) {
            System.out.println("Book not found or already issued.");
        }
    }

    // Return a book by marking it as available
    public void returnBook(String title) {
        boolean found = false;
        for (Book book : books) {
            if (book != null && book.getTitle().equalsIgnoreCase(title) && !book.isAvailable()) {
                book.setAvailable(true);
                System.out.println("You have returned the book '" + book.getTitle() + "'.");
                found = true;
                break;
            }
        }
        if (!found) {
            System.out.println("Book not found or already available.");
        }
    }

    // Display all available books in the library
    public void displayAvailableBooks() {
        boolean availableBooksFound = false;
        System.out.println("Available books in the library:");
        for (Book book : books) {
            if (book != null && book.isAvailable()) {
                System.out.println(book);
                availableBooksFound = true;
            }
        }
        if (!availableBooksFound) {
            System.out.println("No books available in the library.");
        }
    }
}

// Main class to run the program
public class LibraryManagementSystem {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        Library library = new Library(10); // Capacity of 10 books

        boolean exit = false;
        while (!exit) {
            System.out.println("\nWelcome to College Library Management System");
            System.out.println("1. Add a book");
            System.out.println("2. Issue a book");
            System.out.println("3. Return a book");
            System.out.println("4. Display available books");
            System.out.println("5. Exit");
            System.out.print("Enter your choice: ");

            int choice = scanner.nextInt();
            scanner.nextLine(); // Consume newline character

            switch (choice) {
                case 1:
                    System.out.print("Enter book title: ");
                    String title = scanner.nextLine();
                    System.out.print("Enter book author: ");
                    String author = scanner.nextLine();
                    library.addBook(title, author);
                    break;
                case 2:
                    System.out.print("Enter the title of the book you want to issue: ");
                    String issueTitle = scanner.nextLine();
                    library.issueBook(issueTitle);
                    break;
                case 3:
                    System.out.print("Enter the title of the book you want to return: ");
                    String returnTitle = scanner.nextLine();
                    library.returnBook(returnTitle);
                    break;
                case 4:
                    library.displayAvailableBooks();
                    break;
                case 5:
                    exit = true;
                    System.out.println("Exiting the program. Thank you!");
                    break;
                default:
                    System.out.println("Invalid choice. Please enter a number between 1 and 5.");
            }
        }

        scanner.close();
    }
}
